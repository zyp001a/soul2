#!/usr/bin/env bash
GOPATH=~/go
SOULE=$2
SOULD=$3
echo ===set exec $SOULE
echo ===set def $SOULD

if [ "main.sl" -nt "main.sl.exec/golang/main.go" ]; then
 		echo ===gen start
		time go run seed.go main.sl golang
  	rc=$?
		if [[ $rc -ne 0 ]]; then
    		echo ===gen failed				
				exit 1
		fi		
		echo ===gen done
fi
if [ "progl-grammar.js" -nt "progl-parser.js" ]; then
		node progl-grammar.js
		echo ===gen progl parser
fi
if [ "tpl-grammar.js" -nt "tpl-parser.js" ]; then
		node tpl-grammar.js
		echo ===gen tpl parser				
fi
if [ "main.sl.exec/golang/main.go" -nt "main.sl.exec/golang/golang" ]; then
		echo ===build
  	cd main.sl.exec/golang && /usr/bin/go build && cd ../..
fi
OP=$1
if [ -z "$1" ]; then
		OP=all
fi
if [ "$SOULE$SOULD" = "main" ]; then
		SOULE=
fi

if [ "$OP" = "all" ]; then
		echo "===check all"
		for f in `ls test/0*.sl `
		do
				res=$(./main.sl.exec/golang/golang $f $SOULE $SOULD | diff ${f}.$SOULE${SOULD}log -)
				rc=${PIPESTATUS[0]}
				if [[ $rc -ne 0 ]]; then
						echo ===error: $f
						exit 1
				fi				
				if [[ $res ]]; then
						echo ===error: $f
						echo $res
				fi
				echo ===done: $f				
		done
		if [ "$SOULE" = "golang" ]; then
				cp main.sl.exec/golang/main.go seed.go				
 				cp main.sl.exec/golang/golang soul3
 				cp main.sl.exec/golang/golang soul.cache/soul3-$(date +%Y%m%d-%H%M%S)
				cp main.sl.exec/golang/main.go soul.cache/soul3-$(date +%Y%m%d-%H%M%S).go
		fi		
else
		echo "===check $1"
		for f in `ls test/$1*.sl `
		do
 				/usr/bin/go run main.sl.exec/golang/main.go $f $SOULE $SOULD | tee ${f}.$SOULE${SOULD}log
				rc=${PIPESTATUS[0]}
				if [[ $rc -ne 0 ]]; then
						exit 1
				fi				
				echo ===done: $f 
		done
fi
echo ===all done
