~
Class#c = #0
@if(!c){
 ~interface{}~
}@else{
 #typemap = getExec()._typemap
 #t = getName(c)
 #id = getId(c)
 #r = typemapCache[id]
 @if(r){
  ~~=r~~
 }@else{
  #res = ""
  @if(t == "Cpt"){
   res = "interface{}"
  }@elif(inClass(c, EmptyReturn)){
   res = "" 
//  }@elif(inClass(c, Alias)){
//   res = t
  }@elif(inClass(c, Bool)){
   res = "bool"
  }@elif(inClass(c, Uint)){
   res = "uint"
  }@elif(inClass(c, Int)){
   res = "int"
  }@elif(inClass(c, Float32)){
   res = "float32"
  }@elif(inClass(c, Num)){
   res = "float64"
  }@elif(inClass(c, Str)){
   res = "string"
  }@elif(inClass(c, Path)){
   res = "string"
  }@elif(inClass(c, JsonArr)){
   res = "[]interface{}"
  }@elif(inClass(c, Json)){
   res = "map[string]interface{}"
  }@elif(inClass(c, StaticArr)){
   res = "[]"+typemap(class(c.itemsType))
  }@elif(inClass(c, Arr)){
   res = "*[]"+typemap(class(c.itemsType))
  }@elif(inClass(c, Dic)){
  res = "map[string]"+typemap(class(c.itemsType))
  }@elif(inClass(c, FuncProto)){
   res = "func"+^_Func_declare c^
  }@else{
   res = "*"+t
  }
  typemapCache[id] = res
  ~~=res~~
 }
}
~